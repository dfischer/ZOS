[BITS 32]
[global start]
[extern kernel_main]

MBALIGN     equ  1<<0                   ; align loaded modules on page boundaries
MEMINFO     equ  1<<1                   ; provide memory map
FLAGS       equ  MBALIGN | MEMINFO      ; this is the Multiboot 'flag' field
MAGIC       equ  0x1BADB002             ; 'magic number' lets bootloader find the header
CHECKSUM    equ -(MAGIC + FLAGS)        ; checksum of above, to prove we are multiboot

section .multiboot_header
    align 4
    dd MAGIC
    dd FLAGS
    dd CHECKSUM

section .text

start:
    lgdt [trickgdt]
    mov ax, 0x10
    mov ds, ax
    mov es, ax
    mov fs, ax
    mov gs, ax
    mov ss, ax

    jmp 0x08:higherhalf

higherhalf:
    mov esp, sys_stack

    push eax
    push ebx
    call kernel_main

    jmp $

global gdt_flush
extern gp
gdt_flush:
    lgdt [gp]
    mov ax, 0x10
    mov ds, ax
    mov es, ax
    mov fs, ax
    mov gs, ax
    mov ss, ax
    jmp 0x08:flush2
flush2:
    ret
[section .setup]

trickgdt:
    dw gdt_end - gdt - 1;
    dd gdt;

gdt:
    dd 0, 0
    db 0xFF, 0xFF, 0, 0, 0, 10011010b, 11001111b, 0x40
    db 0xFF, 0xFF, 0, 0, 0, 10010010b, 11001111b, 0x40

gdt_end:

[section .bss]

resb 0x1000
sys_stack:
